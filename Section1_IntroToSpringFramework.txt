Section 1: Introduction to Spring Framework.

What is Spring?
  - A powerful and highly flexible framework focused on building web applications in Java.
  - Open source and has a large and active community.

Jakarta EE Vs Spring
  - Java EE quit the race against Spring and the community took over its maintenance via
    Jakarta EE since Oracle owns the trademark for the name "Java".

Spring Core
  - the heart of entire Spring.
  - consists of IoC, DI, Beans, Context, SpEL (Spring Expression Language), IoC Container.

Inversion of Control (IoC)
  - the control flow of a program is inverted: instead of the programmer controlling the flow of a
    program, the framework or service takes control.

Dependency Injection (DI)
  - the pattern through which IoC is achieved.
  - the responsibility of creating objects is shifted from the application to the Spring IoC
    container. It reduces coupling between multiple objects as it is dynamically injected by the
    framework.

Advantages of IoC & DI.
  - Loose coupling between the components.
  - Minimizes the amount of code in the application.
  - Makes unit testing easy with different mocks.
  - Increased system maintainability and module reusability.
  - Allows concurrent or independent development.
  - Replacing modules has no side effect on other modules.

Example of Tight Coupling vs Loose Coupling:
  - Two developers, one with a Desktop and one with a laptop.
  - If the developers want to move to a different room, then this is much easier for the developer
    with a laptop.

Spring Bean
  - any normal Java class that is instantiated, assembled, and otherwise managed by a Spring IoC
    container.
  - The beans are created with the configuration metadata that is supplied to the container either
    in the form of XML configs and Annotations.
  - Spring IoC Container manages the lifecycle of Spring Bean scope and injecting any required
    dependencies in the bean.

Context
  - Like a memory location of your app in which we add all the object instances that we want the
    framework to manage. By default, Spring doesn't know any of the objects you define in your
    application. To enable Spring to see your objects, you need to add them to the context.

SpEL
  - Provides a powerful expression language for querying and manipulating an object graph at runtime
    like setting and getting property values, property assignment, method invocation, etc.

IoC Container - responsible:
  - to instantiate the application class.
  - to configure the object.
  - to assemble the dependencies between the objects.
  - Two types:
    1. org.springframework.beans.factory.BeanFactory -> basic features.
    2. org.springframework.context.ApplicationContext -> advanced features.
  - The Spring container uses DI to manage the components/objects that make up an application.

 